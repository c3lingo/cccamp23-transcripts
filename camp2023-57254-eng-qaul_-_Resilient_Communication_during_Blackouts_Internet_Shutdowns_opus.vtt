WEBVTT

00:00:00.000 --> 00:00:10.000
 [MUSIC]

00:00:10.000 --> 00:00:20.000
 [MUSIC]

00:00:20.000 --> 00:00:34.880
 Thumbs up and so I'm happy to introduce Matthias Huit to you and

00:00:36.000 --> 00:00:40.000
 the Qualm Messenger Resilient Communication during blackouts and

00:00:40.000 --> 00:00:42.840
 internet shutdowns and I give the stage to you Matthias.

00:00:42.840 --> 00:00:44.580
 >> Thank you.

00:00:44.580 --> 00:00:50.180
 >> [APPLAUSE]

00:00:50.180 --> 00:00:51.080
 >> Welcome everybody.

00:00:51.080 --> 00:00:57.360
 In 2011, we started the project, CallNet.

00:00:57.360 --> 00:01:04.640
 Mainly because this has happened before in 2009.

00:01:04.640 --> 00:01:12.480
 It was called the Green Revolution in Iran and

00:01:12.480 --> 00:01:15.600
 it was called also the first social media revolution.

00:01:15.600 --> 00:01:24.880
 Because thousands of Twitter users just colored their Twitter profile in green.

00:01:24.880 --> 00:01:30.280
 And when Al Jazeera later then made a survey over

00:01:30.280 --> 00:01:33.520
 who was really kind of using Twitter within Iran.

00:01:33.520 --> 00:01:40.200
 There were I think about 60 accounts and all those other people were outside.

00:01:40.200 --> 00:01:45.160
 So what is such a social media revolution?

00:01:45.160 --> 00:01:49.840
 In 2011, the Arab Spring started and

00:01:49.840 --> 00:01:52.520
 it was called again a social media revolution.

00:01:52.520 --> 00:01:57.080
 But in all of the cases, during the peaks of the revolutions,

00:01:57.080 --> 00:02:00.440
 the internet was shut down for several days.

00:02:00.440 --> 00:02:05.640
 And the movements and the revolutions even grew.

00:02:05.640 --> 00:02:07.640
 And we have seen that in many cases.

00:02:07.640 --> 00:02:14.680
 So five years later, there became also critical articles about that.

00:02:14.680 --> 00:02:20.680
 However, internet shutdowns is not something which is not happening often.

00:02:20.680 --> 00:02:27.400
 This is just a list of internet shutdowns from governments this year.

00:02:27.400 --> 00:02:30.920
 And it's from several sources that we have collected that.

00:02:30.920 --> 00:02:36.400
 And it was mainly happened because the government was facing opposition.

00:02:36.400 --> 00:02:40.920
 An exception to that is for sure Ukraine, where it was introduced by Russia.

00:02:40.920 --> 00:02:46.120
 But how to communicate then when there is no internet?

00:02:46.120 --> 00:02:53.040
 This is our normal network structure that we usually have.

00:02:53.040 --> 00:02:57.520
 No, our device is connected to an ISP.

00:02:57.520 --> 00:03:01.800
 The ISP is connected to a backbone and peering with some others.

00:03:01.800 --> 00:03:06.560
 And then so when we want to send to another computer a message,

00:03:06.560 --> 00:03:09.560
 then it's usually kind of traveling this way to a server in the internet and

00:03:09.560 --> 00:03:13.880
 then back, even when this person is sitting next to us.

00:03:13.880 --> 00:03:22.120
 So we invented call to be able to communicate

00:03:22.120 --> 00:03:26.000
 directly from end to end devices.

00:03:26.000 --> 00:03:29.440
 And how can that happen?

00:03:29.440 --> 00:03:38.720
 Well, we want to mesh them together just into one big mesh.

00:03:38.720 --> 00:03:44.320
 And enable our Wi-Fi and other means the communication.

00:03:44.320 --> 00:03:48.600
 In 2012, we released our first version.

00:03:48.600 --> 00:03:52.640
 And since then we have gotten user feedback and

00:03:52.640 --> 00:03:56.440
 also supported people in many, many countries.

00:03:56.440 --> 00:04:03.000
 Including Germany, Switzerland, Greece, Tunisia, Taiwan, India, Syria, Egypt, and

00:04:03.000 --> 00:04:03.520
 Iran.

00:04:03.520 --> 00:04:12.920
 We have rewritten the project on a completely new stack in the last two years.

00:04:14.680 --> 00:04:21.040
 We want to be full stack, which means we support all the devices people

00:04:21.040 --> 00:04:23.160
 usually use that they have at their hands.

00:04:23.160 --> 00:04:26.640
 So it's not something for the server, it's really something for the end devices.

00:04:26.640 --> 00:04:29.880
 Which means we have a Linux client, we have an Android client,

00:04:29.880 --> 00:04:32.880
 a Windows client, an iOS client, and a Mac OS client.

00:04:32.880 --> 00:04:38.000
 We have three different modes of interconnection.

00:04:39.040 --> 00:04:45.200
 Bluetooth low energy, we implemented that only by last week.

00:04:45.200 --> 00:04:54.320
 Alarm mode, where you are automatically found within a local area network

00:04:54.320 --> 00:04:59.680
 with the other users when there is no client isolation such as on this camp,

00:04:59.680 --> 00:05:00.240
 unfortunately.

00:05:00.240 --> 00:05:06.560
 And static mode, where you can statically interconnect yourself with some nodes.

00:05:06.560 --> 00:05:11.600
 This can be a node kind of somewhere in this camp or in the internet.

00:05:11.600 --> 00:05:14.920
 It just needs to be reachable and when it's reachable, you are interconnected.

00:05:14.920 --> 00:05:18.960
 And all those devices that are somehow interconnected are meshed together.

00:05:18.960 --> 00:05:24.360
 In order to also make you as the user or

00:05:24.360 --> 00:05:28.840
 an other user aware of the situation, how you are interconnected.

00:05:28.840 --> 00:05:34.520
 So of your own view, we built the network view that shows you that.

00:05:34.520 --> 00:05:40.840
 And also all the users that are interconnected are automatically discovered

00:05:40.840 --> 00:05:43.680
 and shown in your contact list.

00:05:43.680 --> 00:05:51.040
 We have a shout out mode, so you can just send a public message to everyone

00:05:51.040 --> 00:05:54.440
 at this moment interconnected within the network.

00:05:54.440 --> 00:06:02.280
 We of course have a private chat, which is of course

00:06:02.280 --> 00:06:04.240
 fully end to end encrypted.

00:06:04.240 --> 00:06:09.800
 We also have a group chat, which is also fully end to end encrypted and

00:06:09.800 --> 00:06:11.920
 you can add as many people as you like.

00:06:11.920 --> 00:06:19.560
 We tried to make the onboarding process as simple as possible.

00:06:19.560 --> 00:06:21.920
 So there are basically two steps.

00:06:21.920 --> 00:06:26.400
 The language selection, which is usually done automatically due to the language you

00:06:26.400 --> 00:06:27.840
 have on your device.

00:06:27.840 --> 00:06:33.560
 And then the entrance of a username which can be any UTF

00:06:33.560 --> 00:06:36.640
 string even with spaces and so on.

00:06:36.640 --> 00:06:40.920
 Because you are not identified within the network via your username, but

00:06:40.920 --> 00:06:45.640
 via the hash of your public key, which is an idea and

00:06:45.640 --> 00:06:48.040
 is used for routing everything.

00:06:48.040 --> 00:06:57.600
 So these are our features and I would like to try quick,

00:06:57.600 --> 00:06:58.840
 live test.

00:06:58.840 --> 00:07:03.280
 Let's see what is happening.

00:07:03.280 --> 00:07:10.960
 So here we already did the onboarding.

00:07:10.960 --> 00:07:15.440
 Okay, so we have a bright mode and a dark mode and unfortunately,

00:07:15.440 --> 00:07:18.960
 I have chosen the dark mode.

00:07:18.960 --> 00:07:21.640
 So let's see whether we can change that.

00:07:21.640 --> 00:07:23.720
 So we are here on the network view.

00:07:23.720 --> 00:07:26.880
 You see how I am interconnected at this very moment.

00:07:27.880 --> 00:07:30.600
 Of course there is a settings page.

00:07:30.600 --> 00:07:33.400
 We have here the language selection.

00:07:33.400 --> 00:07:36.520
 It's really easy to add new languages at the moment.

00:07:36.520 --> 00:07:39.400
 I don't know, we have over ten different languages.

00:07:39.400 --> 00:07:42.240
 You're very welcome to just add new ones.

00:07:42.240 --> 00:07:47.440
 So the theme is just the default theme.

00:07:47.440 --> 00:07:52.240
 I would say we switch to something more visible.

00:07:52.240 --> 00:07:52.760
 Okay.

00:07:56.000 --> 00:08:01.400
 Then we have here the shout out mode where we can just send

00:08:01.400 --> 00:08:07.320
 a public note which will of course not be encrypted, but

00:08:07.320 --> 00:08:12.960
 it will be signed so it's absolutely clear that it's coming from you.

00:08:12.960 --> 00:08:19.000
 Let's send a quick hello.

00:08:23.440 --> 00:08:27.760
 Let's have a look who else is here.

00:08:27.760 --> 00:08:29.400
 Okay, Bob is here.

00:08:29.400 --> 00:08:32.440
 Maybe we can start a chat with someone else.

00:08:32.440 --> 00:08:33.120
 Alice is here.

00:08:33.120 --> 00:08:39.520
 So here when we go on the user profile of Alice,

00:08:39.520 --> 00:08:46.240
 we see the identification and we also see the public key.

00:08:46.240 --> 00:08:51.840
 Now we can just start a chat with Alice

00:08:53.040 --> 00:08:56.200
 by sending to Alice a message.

00:08:56.200 --> 00:09:02.760
 So now this message was sent to Alice,

00:09:02.760 --> 00:09:05.880
 which is this smartphone I have over here.

00:09:05.880 --> 00:09:08.280
 And Alice received it.

00:09:08.280 --> 00:09:13.520
 And at this very moment that we did, also the security,

00:09:13.520 --> 00:09:19.240
 the crypto handshake, we call it zero round encryption,

00:09:19.240 --> 00:09:21.200
 which is maybe a bit misleading.

00:09:21.200 --> 00:09:24.360
 It just means that the first message is already encrypted, but

00:09:24.360 --> 00:09:28.240
 it's encrypted not symmetrically, but

00:09:28.240 --> 00:09:31.640
 via your private key and the other one's public key.

00:09:31.640 --> 00:09:35.160
 And then this is part of the noise handshake that we are doing and

00:09:35.160 --> 00:09:41.080
 afterwards you have your static communication

00:09:41.080 --> 00:09:43.080
 encryption key that you both share.

00:09:43.080 --> 00:09:48.680
 And we see that this message has been arrived at Alice via this.

00:09:49.960 --> 00:09:52.120
 So let's see here.

00:09:52.120 --> 00:09:59.000
 I also have the possibility to, how do I do that?

00:09:59.000 --> 00:10:01.680
 To take a selfie.

00:10:01.680 --> 00:10:18.120
 And send pictures from here to another device.

00:10:18.120 --> 00:10:22.560
 They will just appear as any other chat message.

00:10:22.560 --> 00:10:25.160
 Of course, you can also send files and so on.

00:10:25.160 --> 00:10:32.200
 And when we have a look who else is here, for example,

00:10:32.200 --> 00:10:37.440
 then we can see that Bob is interconnected with Alice.

00:10:37.440 --> 00:10:40.320
 And this is done because Bob is in other mobile which is

00:10:40.320 --> 00:10:44.160
 interconnected over Bluetooth low energy with Alice.

00:10:44.160 --> 00:10:47.960
 And for example, we can also create a new chat group to

00:10:47.960 --> 00:10:50.320
 show this feature maybe quickly.

00:10:50.320 --> 00:11:00.120
 So let's call it, let's call it Camp.

00:11:00.120 --> 00:11:09.400
 We created, I can select the users that I would like to invite into these chat groups.

00:11:09.400 --> 00:11:14.680
 The users get sent an invitation.

00:11:14.680 --> 00:11:19.240
 The invitation is shown and they can accept it or of course deny it.

00:11:19.240 --> 00:11:27.200
 And then we see that the people have joined the chat.

00:11:27.200 --> 00:11:32.600
 So what else?

00:11:32.600 --> 00:11:39.080
 We also have an Internet overlay which means that you can have static

00:11:39.080 --> 00:11:45.120
 notes in the network and you can add your own and

00:11:45.120 --> 00:11:47.640
 you can connect to them or disconnect to them.

00:11:47.640 --> 00:11:51.000
 So all this kind of stuff.

00:11:51.000 --> 00:11:55.320
 And what happens now if somebody is not online?

00:11:55.320 --> 00:11:58.080
 Which can happen really easily.

00:11:58.080 --> 00:12:04.720
 For that, we have built a second level in our routing protocol,

00:12:04.720 --> 00:12:07.680
 which is called delay tolerant messaging.

00:12:07.680 --> 00:12:14.120
 This means that when somebody is not available, you first check,

00:12:14.120 --> 00:12:19.760
 is there some social distance or social proximity to another user?

00:12:19.760 --> 00:12:24.000
 Let's say you are in the same chat group with other users.

00:12:24.000 --> 00:12:28.720
 Then this user would most probably volunteer to transport this package,

00:12:28.720 --> 00:12:31.320
 now this message, which is fully encrypted.

00:12:31.320 --> 00:12:35.800
 The user cannot read it, just knows to whom he needs to send it.

00:12:35.800 --> 00:12:42.040
 And you can also manually say, okay, if the user is not available,

00:12:42.040 --> 00:12:47.520
 I want to send it to this other user and this other user will volunteer

00:12:47.520 --> 00:12:51.920
 to carry the packages to the other person.

00:12:51.920 --> 00:13:02.600
 I guess I went through quite a lot, so let's jump back to the presentation.

00:13:02.600 --> 00:13:12.440
 Maybe a very quick look into the technical setup of how we have done that.

00:13:12.440 --> 00:13:17.880
 As we try to be able to run on literally every device,

00:13:17.880 --> 00:13:24.000
 we created a library in the background which is called libcal.

00:13:24.000 --> 00:13:26.920
 Libcal is written in Rust.

00:13:26.920 --> 00:13:33.280
 Under the hood for some of our messaging, we are using Rust peer-to-peer.

00:13:33.280 --> 00:13:42.840
 This gives us already a trusted and transport encrypted connection.

00:13:42.840 --> 00:13:47.960
 In that, we have user discovery, identity creation,

00:13:47.960 --> 00:13:51.840
 the signing and the encryption of the transport,

00:13:51.840 --> 00:13:55.520
 the management and storage we added extra to that,

00:13:55.520 --> 00:13:59.200
 the messaging, the group chat, the file sending and so on.

00:13:59.200 --> 00:14:07.800
 For the interface, we have chosen another technology which is quite okay.

00:14:07.800 --> 00:14:11.800
 It's Flutter, which is an open source project also

00:14:11.800 --> 00:14:17.400
 that runs on all these five operating systems that we support.

00:14:17.400 --> 00:14:22.160
 So for most of the things, it's right, it runs and it runs everywhere.

00:14:22.160 --> 00:14:26.880
 Of course, there are always things that you need to tweak.

00:14:26.880 --> 00:14:35.760
 Maybe a quick look into our future.

00:14:35.760 --> 00:14:41.080
 We are shortly before the release of the call metrics bridge

00:14:41.080 --> 00:14:45.560
 to interconnect call also with other messengers.

00:14:45.560 --> 00:14:49.800
 We of course want to be able to run on OpenWRT.

00:14:49.800 --> 00:14:57.280
 We are working and still are looking for more collaborators

00:14:57.280 --> 00:15:00.840
 to find good ways to make user discoveries

00:15:00.840 --> 00:15:06.280
 in really large wireless community mesh networks.

00:15:06.280 --> 00:15:09.360
 Because what we usually use and what you usually use at home

00:15:09.360 --> 00:15:12.280
 for user discovery is called MDNS.

00:15:12.280 --> 00:15:17.440
 MDNS is fine if it's kind of a rather small network

00:15:17.440 --> 00:15:19.480
 to find your printer and so on.

00:15:19.480 --> 00:15:25.720
 But it does not work well in large mesh networks.

00:15:25.720 --> 00:15:28.960
 And this is something we really want to solve

00:15:28.960 --> 00:15:35.600
 and which would be very usable for many peer-to-peer projects.

00:15:35.600 --> 00:15:39.480
 We also want to extend our routing protocol to a multi-hop,

00:15:39.480 --> 00:15:42.960
 multi-route, delay tolerant networking.

00:15:42.960 --> 00:15:48.440
 We want to have public file sharing, voice and video chat.

00:15:48.440 --> 00:15:50.440
 So are there questions?

00:15:50.440 --> 00:16:00.800
 [ Applause ]

00:16:00.800 --> 00:16:06.280
 >> I think this one was first, then you and the rest.

00:16:06.280 --> 00:16:07.680
 >> Thanks so much for the great presentation

00:16:07.680 --> 00:16:09.200
 and for this awesome work.

00:16:09.200 --> 00:16:13.200
 I'm just curious, how do you help ensure that people in countries

00:16:13.200 --> 00:16:17.680
 that experience internet outages install and use this tool?

00:16:17.680 --> 00:16:19.040
 Can you repeat your question?

00:16:19.040 --> 00:16:22.520
 >> How do you engage communities in countries that are impacted

00:16:22.520 --> 00:16:25.680
 by internet outages or internet shutdowns?

00:16:25.680 --> 00:16:27.680
 >> We are not engaging.

00:16:27.680 --> 00:16:29.600
 They usually contact us.

00:16:29.600 --> 00:16:32.040
 It's all published on GitHub.

00:16:32.040 --> 00:16:34.320
 We are in some of the stores.

00:16:34.320 --> 00:16:35.960
 You can download the apps.

00:16:35.960 --> 00:16:40.080
 Usually then we get tickets on our GitHub.

00:16:40.080 --> 00:16:43.480
 We get contacted by email and they ask questions.

00:16:43.480 --> 00:16:46.080
 So it's the other way around.

00:16:46.080 --> 00:16:56.240
 >> Hi. Are you connected to the Pascucci store that's used

00:16:56.240 --> 00:16:59.280
 in Iran and a few other places?

00:16:59.280 --> 00:17:03.160
 >> There are quite a few Iranians that send us a lot

00:17:03.160 --> 00:17:06.320
 of great testing feedback and also pull requests.

00:17:06.320 --> 00:17:09.920
 I don't know which group they do belong to.

00:17:09.920 --> 00:17:11.240
 >> Okay.

00:17:11.240 --> 00:17:14.840
 >> Okay. There's one over there.

00:17:14.840 --> 00:17:21.240
 >> Hi. Thank you for the talk.

00:17:21.240 --> 00:17:25.760
 Kind of interesting project from a resilience point of view,

00:17:25.760 --> 00:17:30.440
 but as you mentioned Iran quite a lot, how do you actually prevent

00:17:30.440 --> 00:17:33.960
 from someone in the network, especially from broadcasting

00:17:33.960 --> 00:17:36.280
 to just fingerprinting the users?

00:17:36.280 --> 00:17:38.800
 Because fingerprinting those users is basically equally

00:17:38.800 --> 00:17:40.600
 like fingerprinting potential protesters

00:17:40.600 --> 00:17:43.520
 and bringing them into jail.

00:17:43.520 --> 00:17:44.800
 >> Yeah. That's true.

00:17:44.800 --> 00:17:49.440
 And I guess this is also one of the points

00:17:49.440 --> 00:17:52.160
 for which we have built call.

00:17:52.160 --> 00:17:55.120
 We have built call for communication.

00:17:55.120 --> 00:17:58.360
 If you don't want to communicate, if you don't want to be visible

00:17:58.360 --> 00:18:01.400
 to the people next to you, don't use it.

00:18:01.400 --> 00:18:02.720
 Use something else.

00:18:02.720 --> 00:18:07.200
 So it's great to use it in situations where you want

00:18:07.200 --> 00:18:10.360
 to communicate and you want to find other people and you want

00:18:10.360 --> 00:18:14.280
 to be able just to kind of shout out something.

00:18:14.280 --> 00:18:18.840
 I mean finding out what somebody

00:18:18.840 --> 00:18:22.920
 or in which way somebody is communicating is usually

00:18:22.920 --> 00:18:26.560
 when you have a network overview possible.

00:18:26.560 --> 00:18:32.120
 So when you are just locally, it already gets a bit more difficult

00:18:32.120 --> 00:18:35.320
 because you need there to be in place.

00:18:35.320 --> 00:18:39.400
 When you know or you expect that people can do that,

00:18:39.400 --> 00:18:43.840
 then kind of you can reflect on it what the risks are

00:18:43.840 --> 00:18:46.640
 and whether you want to do that or not.

00:18:46.640 --> 00:18:50.000
 But also one of the big problems we always see is

00:18:50.000 --> 00:18:53.440
 that when the onboarding process is really complex,

00:18:53.440 --> 00:18:54.680
 nobody is doing it.

00:18:54.680 --> 00:18:59.160
 There are private messengers that kind of, yeah,

00:18:59.160 --> 00:19:03.400
 it takes a while until you onboard and we tested

00:19:03.400 --> 00:19:09.200
 since quite a long time and then people are not using it.

00:19:09.200 --> 00:19:13.000
 So especially when you are also, it's not only for uprising

00:19:13.000 --> 00:19:16.000
 but also disaster recovery and so on.

00:19:16.000 --> 00:19:18.480
 There you don't have time.

00:19:18.480 --> 00:19:20.200
 So you don't have the possibility.

00:19:20.200 --> 00:19:22.000
 Maybe you have some structures,

00:19:22.000 --> 00:19:26.640
 but when it's an entire population, then these structures

00:19:26.640 --> 00:19:29.520
 that you may be built may be very, very small

00:19:29.520 --> 00:19:34.000
 and are not useful for larger communications.

00:19:34.000 --> 00:19:41.840
 Do you have a follow up?

00:19:41.840 --> 00:19:42.840
 You have ten seconds.

00:19:42.840 --> 00:19:45.560
 Okay, thanks for the clarification.

00:19:45.560 --> 00:19:48.520
 Just please make very, very clear on your website

00:19:48.520 --> 00:19:51.160
 that it's not for privacy reasons.

00:19:51.160 --> 00:19:53.400
 It's just to be able to communicate.

00:19:53.400 --> 00:19:54.720
 Please.

00:19:54.720 --> 00:19:57.520
 I would not say it's not for privacy reasons

00:19:57.520 --> 00:20:01.320
 because everything is transport encrypted.

00:20:01.320 --> 00:20:03.840
 Everything is end-to-end encrypted except what you do

00:20:03.840 --> 00:20:07.000
 in public chats and this is clearly noted.

00:20:07.000 --> 00:20:08.760
 This is public.

00:20:08.760 --> 00:20:12.080
 And with almost all the other messengers,

00:20:12.080 --> 00:20:14.560
 even with the very private ones, you can,

00:20:14.560 --> 00:20:17.680
 when you survive the network, see that this user

00:20:17.680 --> 00:20:22.120
 was communicating and even most probably to whom

00:20:22.120 --> 00:20:23.480
 this user was communicating.

00:20:23.480 --> 00:20:29.640
 So this is always a big chicken and egg problem.

00:20:29.640 --> 00:20:32.440
 Yeah, maybe going a little in the same direction.

00:20:32.440 --> 00:20:35.760
 If I got it right, the identifier for routing

00:20:35.760 --> 00:20:38.560
 will always be a hash of the public key, right?

00:20:38.560 --> 00:20:40.480
 And there have been approaches like Simplex

00:20:40.480 --> 00:20:43.120
 where they use temporary identifiers.

00:20:43.120 --> 00:20:45.880
 Would that be possible in such a mesh setting

00:20:45.880 --> 00:20:47.600
 to negotiate this?

00:20:47.600 --> 00:20:49.960
 Because that would mean that every device in the network

00:20:49.960 --> 00:20:51.760
 would have at least access to the metadata

00:20:51.760 --> 00:20:53.960
 of who communicated to whom, right?

00:20:53.960 --> 00:20:56.040
 So is that possible in a mesh setting

00:20:56.040 --> 00:21:00.000
 and is it on the roadmap to negotiate temporary identifiers?

00:21:00.000 --> 00:21:03.480
 No, this is not on our roadmap.

00:21:03.480 --> 00:21:07.240
 It would, of course, be very interesting to think about that.

00:21:07.240 --> 00:21:09.440
 But when you want to solve two things,

00:21:09.440 --> 00:21:13.040
 which means direct communication and delayed tolerance,

00:21:13.040 --> 00:21:15.360
 you cannot change your identifier

00:21:15.360 --> 00:21:16.920
 because when you change your identifier,

00:21:16.920 --> 00:21:19.200
 you have no idea where the packet should go.

00:21:19.200 --> 00:21:22.720
 Also, when you mesh and it has to travel,

00:21:22.720 --> 00:21:24.800
 when you change the identifier,

00:21:24.800 --> 00:21:27.240
 you have no idea where the things should go.

00:21:27.240 --> 00:21:33.840
 So this is something which we kind of do not have on our scope.

00:21:33.840 --> 00:21:37.480
 And, yeah.

00:21:37.480 --> 00:21:40.040
 Okay, last question.

00:21:40.040 --> 00:21:41.320
 Hi.

00:21:41.320 --> 00:21:45.480
 Have you had any problems with malicious users on the network,

00:21:45.480 --> 00:21:50.760
 flooding the network, or basically clogging up the pipes

00:21:50.760 --> 00:21:52.680
 between the devices,

00:21:52.680 --> 00:21:55.320
 given the fact that you're storing forwarding devices?

00:21:55.320 --> 00:21:57.160
 Because I've seen this quite a lot in Haggle,

00:21:57.160 --> 00:21:58.840
 in content-setting networking,

00:21:58.840 --> 00:22:02.120
 in data networking, that this is a problem.

00:22:02.120 --> 00:22:07.880
 This is actually something we have very high up in our to-do,

00:22:07.880 --> 00:22:11.720
 to really do spam protection very well,

00:22:11.720 --> 00:22:12.960
 to do blocking.

00:22:12.960 --> 00:22:15.280
 We have the feature to block other users,

00:22:15.280 --> 00:22:18.240
 so this is already the possibility to do.

00:22:18.240 --> 00:22:21.080
 I guess as we only release this new version,

00:22:21.080 --> 00:22:25.440
 which works quite different from the first that we have,

00:22:25.440 --> 00:22:30.040
 last September, and I would say it's now stable to use it.

00:22:30.040 --> 00:22:35.040
 We did not have these problems yet, but they will come.

00:22:35.040 --> 00:22:38.360
 Okay, we are out of time, unfortunately,

00:22:38.360 --> 00:22:41.400
 but maybe a final word, where can people find you

00:22:41.400 --> 00:22:46.600
 if they want to keep chatting and exchange on the tool?

00:22:46.600 --> 00:22:50.560
 There is this website called .net.

00:22:50.560 --> 00:22:51.960
 On it is everything.

00:22:51.960 --> 00:22:53.960
 There is the link GitHub repository.

00:22:53.960 --> 00:22:59.400
 We have a matrix discussion group.

00:22:59.400 --> 00:23:00.680
 Okay, very good.

00:23:00.680 --> 00:23:02.960
 Then thank Matthias again for his presentation.

00:23:03.960 --> 00:23:04.960
 Thank you.

00:23:05.960 --> 00:23:07.960
 [ Applause ]

00:23:08.960 --> 00:23:12.960
 [ Music ]

