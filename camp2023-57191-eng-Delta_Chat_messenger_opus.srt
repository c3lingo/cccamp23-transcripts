1
00:00:00,000 --> 00:00:10,000
 [MUSIC]

2
00:00:10,000 --> 00:00:20,000
 [MUSIC]

3
00:00:20,000 --> 00:00:32,320
 All right, welcome everybody.

4
00:00:32,320 --> 00:00:36,040
 First talk on day four at the Bits and Boim stage.

5
00:00:36,040 --> 00:00:36,960
 How's everybody doing?

6
00:00:36,960 --> 00:00:40,160
 >> [APPLAUSE]

7
00:00:40,160 --> 00:00:42,440
 >> Yeah, a bit tired and then there's the sun.

8
00:00:42,440 --> 00:00:47,440
 So please, as it's very warm today and sunny, take cover under our sun sails.

9
00:00:47,440 --> 00:00:50,760
 Also, drink more water, that's always important.

10
00:00:50,760 --> 00:00:53,400
 And yeah, be aware that there is recording in progress.

11
00:00:53,400 --> 00:00:56,560
 So if you are sitting in front here, please mind the camera.

12
00:00:56,560 --> 00:01:00,760
 We are now listening to a talk by Holger.

13
00:01:00,760 --> 00:01:03,800
 He will explain us something about the DeltaChat Messenger,

14
00:01:03,800 --> 00:01:07,200
 which is email based and has some unique features.

15
00:01:07,200 --> 00:01:10,240
 And he will also talk about the different functionalities and

16
00:01:10,240 --> 00:01:12,320
 security aspects of that.

17
00:01:12,320 --> 00:01:15,080
 Holger said that he likes to do the talk interactive.

18
00:01:15,080 --> 00:01:18,360
 So if you have questions, you can ask them throughout.

19
00:01:18,360 --> 00:01:21,920
 We have our stage manager Rico here with a microphone.

20
00:01:21,920 --> 00:01:25,680
 Raise your hand and he will come to you so everybody understands you well.

21
00:01:25,680 --> 00:01:30,160
 And yeah, if you want to post in the fatty verse about this talk,

22
00:01:30,160 --> 00:01:34,080
 it's the hashtag #BitsundBÃ¤ume with an AE, obviously.

23
00:01:34,080 --> 00:01:38,760
 So with that, I have nothing more to say than a very warm welcome again to Holger.

24
00:01:38,760 --> 00:01:39,320
 Enjoy the talk.

25
00:01:39,320 --> 00:01:45,800
 >> [APPLAUSE]

26
00:01:45,800 --> 00:01:47,080
 >> Thanks.

27
00:01:47,080 --> 00:01:50,800
 Well, it's been a while since I stood in front of, I don't know, 50, 60 people.

28
00:01:50,800 --> 00:01:52,720
 I think it was actually before the pandemic.

29
00:01:52,720 --> 00:01:57,520
 So I used to give quite some talks before the pandemic, but

30
00:01:57,520 --> 00:01:58,960
 that's like long ago, I don't know.

31
00:01:58,960 --> 00:02:03,800
 Anyway, we are offline.

32
00:02:03,800 --> 00:02:09,040
 And one of the features of the DeltaChat Messenger is that it can work very well

33
00:02:09,040 --> 00:02:09,760
 offline.

34
00:02:09,760 --> 00:02:11,360
 This will be a recurring topic.

35
00:02:11,360 --> 00:02:18,040
 And first of all, I'd like to know who of you have tried once,

36
00:02:18,040 --> 00:02:23,360
 not continuously used, but tried once DeltaChat in the last year?

37
00:02:23,360 --> 00:02:26,600
 Okay, so that's like a quarter, I would say.

38
00:02:26,600 --> 00:02:32,520
 So I will say a few words about the state of messaging.

39
00:02:32,520 --> 00:02:36,800
 I mean, you probably know WhatsApp and Signal and Telegram and so on.

40
00:02:36,800 --> 00:02:42,680
 And they are centralized island basically where the devices

41
00:02:42,680 --> 00:02:46,600
 connect to the single authority and kind of route messages and

42
00:02:46,600 --> 00:02:50,400
 exchange their cryptographic identity through the central server.

43
00:02:51,640 --> 00:02:57,760
 Then we have a very long running, like 30, 40 years network,

44
00:02:57,760 --> 00:03:03,160
 which is federated and interoperable.

45
00:03:03,160 --> 00:03:06,120
 And basically, if I just say it like this,

46
00:03:06,120 --> 00:03:10,680
 then it could also be the kind of mobile number network.

47
00:03:10,680 --> 00:03:15,880
 But the thing with the email-based federated system is that,

48
00:03:15,880 --> 00:03:21,040
 at least conceptually, everybody can just instantiate an email server and

49
00:03:21,040 --> 00:03:23,560
 just have their own users and so on.

50
00:03:23,560 --> 00:03:26,880
 And that is not so easy in the mobile phone number network,

51
00:03:26,880 --> 00:03:29,360
 which is pretty closed on many levels.

52
00:03:29,360 --> 00:03:33,640
 So the email federated server system that we have on the planet

53
00:03:33,640 --> 00:03:39,560
 is the largest federated system that exists basically as an open system.

54
00:03:39,560 --> 00:03:43,520
 And DeltaChat is a messenger that uses that.

55
00:03:43,520 --> 00:03:46,200
 So instead of contacting a single authority,

56
00:03:46,200 --> 00:03:50,760
 you actually contact your email provider.

57
00:03:50,760 --> 00:03:52,480
 There's no other server involved.

58
00:03:52,480 --> 00:03:58,520
 You contact, I don't know, Posteo, some people use Hotmail,

59
00:03:58,520 --> 00:04:04,000
 or you use your own domain, or Gmail, and so on.

60
00:04:04,000 --> 00:04:08,240
 And then the mail providers talk with each other to exchange messages.

61
00:04:08,240 --> 00:04:13,960
 And your communication partner uses the email server of their choice.

62
00:04:13,960 --> 00:04:17,960
 So when you enter your email credentials in DeltaChat,

63
00:04:17,960 --> 00:04:22,720
 it is your username and password, but it doesn't go anywhere except to your

64
00:04:22,720 --> 00:04:26,880
 email provider to get your mails and to send mails.

65
00:04:26,880 --> 00:04:31,200
 So it's not like it's transferred to some secret DeltaChat server or something.

66
00:04:31,200 --> 00:04:39,720
 I said it's the largest federated open messaging system, email.

67
00:04:41,640 --> 00:04:48,400
 DeltaChat is not only able to talk with other people who have installed DeltaChat,

68
00:04:48,400 --> 00:04:54,280
 but actually any message that DeltaChat sends can also be sent to someone using

69
00:04:54,280 --> 00:05:00,920
 a web mail, or K9 mail, or various other email apps.

70
00:05:00,920 --> 00:05:02,600
 And they will just receive it as a message.

71
00:05:02,600 --> 00:05:05,480
 So if you actually attach a picture, it will be an attachment.

72
00:05:05,480 --> 00:05:08,480
 And if they reply, you will see it in your chat.

73
00:05:08,480 --> 00:05:13,600
 So in that sense, you can basically address from your DeltaChat messenger

74
00:05:13,600 --> 00:05:15,200
 anyone with an email address.

75
00:05:15,200 --> 00:05:20,360
 And you can also use it to subscribe to some services.

76
00:05:20,360 --> 00:05:25,200
 Like you just get chat messages, and it's like a nice quick interface to deal with

77
00:05:25,200 --> 00:05:28,000
 like notifications and other things.

78
00:05:28,000 --> 00:05:36,320
 One thing that I've been involved with, let's say peer to peer, crypto,

79
00:05:36,320 --> 00:05:42,640
 some other decentralization topics since about 10 years now quite deeply.

80
00:05:42,640 --> 00:05:45,240
 I mean, originally since 20 years, but in the last 10 years,

81
00:05:45,240 --> 00:05:50,120
 I really, it was actually past Snowden, like almost exactly 10 years ago.

82
00:05:50,120 --> 00:05:54,600
 But I thought, okay, I really want to use my expertise to

83
00:05:54,600 --> 00:05:56,600
 help do something different than what we have.

84
00:05:56,600 --> 00:06:04,720
 And in 2017, Bjorn was actually sitting somewhere here, there.

85
00:06:04,720 --> 00:06:08,240
 He started for his daughter like a WhatsApp alternative.

86
00:06:08,240 --> 00:06:14,040
 He took Telegram and ported it to use an email library.

87
00:06:14,040 --> 00:06:15,880
 And so you had the Telegram interface, but

88
00:06:15,880 --> 00:06:20,400
 instead of contacting Telegram servers, you just contact email servers.

89
00:06:20,400 --> 00:06:24,240
 And within like two or three months, it worked, and people started using it.

90
00:06:24,240 --> 00:06:28,120
 But then people got back and said, wow, what about end to end encryption?

91
00:06:28,120 --> 00:06:33,400
 And that's where I came in, because I was involved in the AutoCrypt standard and

92
00:06:33,400 --> 00:06:37,080
 some other security things in that years.

93
00:06:37,080 --> 00:06:44,040
 And this idea that you have something that is as usable as WhatsApp or Telegram,

94
00:06:44,040 --> 00:06:47,480
 and that you actually really try to offer something that

95
00:06:47,480 --> 00:06:49,880
 fully interoperates with the email system,

96
00:06:49,880 --> 00:06:55,000
 that's like a design drive that goes since its beginning.

97
00:06:55,000 --> 00:06:59,960
 We're also conducting various independent security audits.

98
00:06:59,960 --> 00:07:04,600
 But if you are actually interested in the details of security aspects, and

99
00:07:04,600 --> 00:07:08,360
 there are many, I suggest that you come later to our village and

100
00:07:08,360 --> 00:07:12,280
 we have a more detailed discussion because in a group like this,

101
00:07:12,280 --> 00:07:14,920
 it's easily lost in details.

102
00:07:14,920 --> 00:07:19,680
 One thing that we did since we met in 2019 in Kiev, in Ukraine,

103
00:07:19,680 --> 00:07:26,160
 is that we moved our C development that was the core of all the apps on Android,

104
00:07:26,160 --> 00:07:29,040
 iOS, desktop, and so on.

105
00:07:29,040 --> 00:07:32,600
 We moved this C development to Rust.

106
00:07:32,600 --> 00:07:37,240
 So before it came cool last year or something, I don't know.

107
00:07:37,240 --> 00:07:42,680
 So all of the networking, I guess,

108
00:07:42,680 --> 00:07:47,320
 is the only email messenger that has networking and all of the network

109
00:07:47,320 --> 00:07:52,120
 protocols, encryption, decryption, and of all of the APIs that processes

110
00:07:52,120 --> 00:07:56,800
 this completely implemented in Rust with security audits.

111
00:07:56,800 --> 00:08:01,360
 And that means it's quite fast and we can easily collaborate.

112
00:08:01,360 --> 00:08:05,880
 Like Rust is often, often you look at some language feature or so, but

113
00:08:05,880 --> 00:08:09,440
 there's this whole, you want to have an imagery size?

114
00:08:09,440 --> 00:08:14,800
 You use a crate to do imagery size and it works on iOS, on Android,

115
00:08:14,800 --> 00:08:18,000
 on desktop platforms and so on, and it just works.

116
00:08:18,000 --> 00:08:20,800
 We can just include it and use imagery sizing.

117
00:08:20,800 --> 00:08:24,800
 And that is, if you are familiar with C and C++,

118
00:08:24,800 --> 00:08:29,200
 getting this to work on five platforms is serious work.

119
00:08:29,200 --> 00:08:32,520
 So Rust is actually very good for collaboration between different

120
00:08:32,520 --> 00:08:34,320
 development groups.

121
00:08:34,320 --> 00:08:44,200
 The main thing we have been doing the last year, actually,

122
00:08:44,200 --> 00:08:48,080
 is that we have been developing an idea where we use the messenger not only for

123
00:08:48,080 --> 00:08:52,160
 the social messages that you have with your chat group, your family,

124
00:08:52,160 --> 00:08:59,760
 your hacker space, and so on, but you can also send a web application.

125
00:08:59,760 --> 00:09:04,560
 We call this WebXTC, WebXTC.org.

126
00:09:04,560 --> 00:09:10,000
 And it basically means that you have a zip file that contains an index HTML,

127
00:09:10,000 --> 00:09:14,800
 some JavaScript, some assets, and you just drop this as an attachment into a chat,

128
00:09:14,800 --> 00:09:17,520
 and everybody gets a start button and everybody can just start it.

129
00:09:18,920 --> 00:09:22,760
 So the distribution is not like some app store or something like this.

130
00:09:22,760 --> 00:09:28,240
 You can literally use your command line to zip to package this together,

131
00:09:28,240 --> 00:09:33,320
 and then drop it into the chat with your partner or

132
00:09:33,320 --> 00:09:35,760
 your friend's hacker space whatsoever.

133
00:09:35,760 --> 00:09:37,680
 And then anybody can run this app.

134
00:09:37,680 --> 00:09:41,840
 And these apps actually send their messages via the messenger.

135
00:09:41,840 --> 00:09:43,960
 We return to this point.

136
00:09:46,120 --> 00:09:51,960
 It means that when you write a web app, how many of you have touched web

137
00:09:51,960 --> 00:09:54,760
 application technology or website technology, actually?

138
00:09:54,760 --> 00:10:00,080
 Quite a few. So you probably know index HTML and all of these things.

139
00:10:00,080 --> 00:10:02,880
 You have heard of React and all of these frameworks.

140
00:10:02,880 --> 00:10:06,640
 The way how you write web apps that run in DeltaChat and

141
00:10:06,640 --> 00:10:12,920
 also to other messengers by now is by calling a send and

142
00:10:12,920 --> 00:10:18,040
 a receive function basically standard in, standard out for

143
00:10:18,040 --> 00:10:20,520
 pushing messages between your app instances.

144
00:10:20,520 --> 00:10:25,800
 If I drop a zip file into a chat and people start this in the chat,

145
00:10:25,800 --> 00:10:30,240
 and these apps call send update,

146
00:10:30,240 --> 00:10:34,600
 the other app instances will receive it in their update listener.

147
00:10:34,600 --> 00:10:36,000
 So that's the API.

148
00:10:36,000 --> 00:10:41,640
 There's no component, the thing, there's no React-like thing you have to use or

149
00:10:41,640 --> 00:10:43,360
 anything, and if you look at the example apps,

150
00:10:43,360 --> 00:10:45,720
 you'll find all kinds of frameworks, it doesn't matter.

151
00:10:45,720 --> 00:10:50,680
 It's only this send receive API that goes via the messenger and

152
00:10:50,680 --> 00:10:53,320
 is end-to-end encrypted to all of the endpoints.

153
00:10:53,320 --> 00:10:58,520
 We have just released, like before, camp on the blog.

154
00:10:58,520 --> 00:11:03,400
 You can also find this something called XStore.

155
00:11:03,400 --> 00:11:07,440
 Bit of a random name, has nothing to do with this other X that is floating around.

156
00:11:09,320 --> 00:11:13,520
 Or maybe it has something to do with it because it is actually true that you can,

157
00:11:13,520 --> 00:11:17,920
 like a lot of games have been actually ported to this zip file model, but

158
00:11:17,920 --> 00:11:20,840
 also something like a collaborative editor.

159
00:11:20,840 --> 00:11:25,600
 So that is like the second last row, second thing is the editor.

160
00:11:25,600 --> 00:11:30,600
 And it means that you can drop this and

161
00:11:30,600 --> 00:11:35,280
 edit with anybody in the chat and all of the messages between the,

162
00:11:35,280 --> 00:11:38,560
 that update the editor will be end-to-end encrypted.

163
00:11:38,560 --> 00:11:40,120
 And you can use it offline.

164
00:11:40,120 --> 00:11:43,520
 And there's no server that needs to mediate anything.

165
00:11:43,520 --> 00:11:53,680
 So if you really start using it, it's like surprisingly,

166
00:11:53,680 --> 00:11:56,960
 like what is important to note is what is not there.

167
00:11:56,960 --> 00:12:01,600
 There's no login, there's no OAuth, there's no username,

168
00:12:01,600 --> 00:12:06,600
 there's no password, there's no GDPR, there's no cookie consent and so on.

169
00:12:06,600 --> 00:12:11,840
 Because the web app runs in a totally isolated environment and

170
00:12:11,840 --> 00:12:14,320
 cannot communicate to the internet, just like here.

171
00:12:14,320 --> 00:12:16,140
 And.

172
00:12:16,140 --> 00:12:25,280
 And that means that the only way for the app to get out from its like very

173
00:12:25,280 --> 00:12:30,040
 restricted sandbox is to call send message and receive message.

174
00:12:30,040 --> 00:12:34,160
 And it has no direct HTTP to anything also, it cannot just, cannot do this.

175
00:12:34,160 --> 00:12:37,320
 So that's why we also sometimes say peer-to-peer apps.

176
00:12:37,320 --> 00:12:42,320
 Because you really send a message and it arrives at your other instances of

177
00:12:42,320 --> 00:12:45,840
 the same app and they can process the update they got from themselves,

178
00:12:45,840 --> 00:12:46,920
 like from the other instance.

179
00:12:46,920 --> 00:12:55,720
 So you have in an editor that runs as a WebXTC, you have a, I got it.

180
00:12:55,720 --> 00:13:00,200
 You have a basically, but without the server.

181
00:13:00,200 --> 00:13:03,840
 So everything is encrypted, also no login and so on.

182
00:13:03,840 --> 00:13:11,200
 But you can, like any XTC app, like even Tetris or

183
00:13:11,200 --> 00:13:14,040
 like the high score board of Tetris, end-to-end encrypted.

184
00:13:14,040 --> 00:13:17,760
 Little drawing board, end-to-end encrypted.

185
00:13:17,760 --> 00:13:21,960
 A little editor, the checklist app, like a couple of kilobytes, or

186
00:13:21,960 --> 00:13:25,280
 the poll app is like six kilobytes large, right?

187
00:13:25,280 --> 00:13:28,040
 Everything completely end-to-end encrypted, offline first.

188
00:13:28,040 --> 00:13:32,800
 You can use it even here and then later on when you go somewhere, updates and so on.

189
00:13:32,800 --> 00:13:35,960
 And you don't need to work very hard as a web developer.

190
00:13:35,960 --> 00:13:43,720
 We had a carpenter who had not done any HTML, JavaScript or GitHub.

191
00:13:43,720 --> 00:13:49,840
 And this person was, through education,

192
00:13:49,840 --> 00:13:54,360
 a few questions, able to write a functional app that is part of the app store.

193
00:13:54,360 --> 00:13:57,400
 I mean the store that we have, this X store, that you can mail and

194
00:13:57,400 --> 00:14:00,400
 it gives you a selection of apps.

195
00:14:00,400 --> 00:14:02,640
 That's the level of simplicity.

196
00:14:02,640 --> 00:14:05,600
 And his app is like end-to-end encrypted.

197
00:14:05,600 --> 00:14:06,640
 It works offline first.

198
00:14:06,640 --> 00:14:12,160
 So basically any web app that you put in there gains these properties.

199
00:14:12,160 --> 00:14:14,800
 And that's pretty interesting, I would say.

200
00:14:14,800 --> 00:14:20,000
 To give you a little bit of an overview of what are the numbers,

201
00:14:20,000 --> 00:14:23,720
 because we perceive reality, I heard, through numbers.

202
00:14:23,720 --> 00:14:26,240
 And then how many users, how many this and that, and so on.

203
00:14:27,760 --> 00:14:33,080
 We have currently three messengers that support it, that support WebXTC.

204
00:14:33,080 --> 00:14:36,760
 That is DeltaChat, of course, who's kind of like spearheading the effort and

205
00:14:36,760 --> 00:14:43,080
 also tries to get some funding to evolve some of the features so

206
00:14:43,080 --> 00:14:47,200
 that you can do something like this application store and things like this.

207
00:14:47,200 --> 00:14:51,280
 And then there's Geogram, an XMPP based messenger,

208
00:14:51,280 --> 00:14:54,160
 where you can use the same apps, the same zip file.

209
00:14:54,160 --> 00:14:57,120
 You just drop it into Geogram and it runs there.

210
00:14:58,120 --> 00:15:04,680
 It's independent from how the send update, receive update is implemented.

211
00:15:04,680 --> 00:15:07,400
 And in XMPP, it's like an XMPP message.

212
00:15:07,400 --> 00:15:13,480
 In DeltaChat, it's like a PGP encrypted message that goes via the providers.

213
00:15:13,480 --> 00:15:16,960
 In a prospective future system where you have some peer-to-peer connection,

214
00:15:16,960 --> 00:15:18,640
 it will be this peer-to-peer connection.

215
00:15:18,640 --> 00:15:21,760
 So the apps themselves, they run basically unmodified.

216
00:15:21,760 --> 00:15:24,120
 That's the idea.

217
00:15:24,120 --> 00:15:26,120
 We had four security audits.

218
00:15:26,120 --> 00:15:30,920
 You can read about this in the kind of earlier this year, the blog posts.

219
00:15:30,920 --> 00:15:36,480
 Around end-to-end encryption, the REST PGP implementation, the TLS setup,

220
00:15:36,480 --> 00:15:41,960
 network parsing, IMAP SMTP, and then also WebXTC security,

221
00:15:41,960 --> 00:15:44,880
 getting an isolated web view.

222
00:15:44,880 --> 00:15:51,360
 Read all the great story about how Chrome sucks in the blog post,

223
00:15:51,360 --> 00:15:55,160
 I think, from March or so, where we detail how bad it is.

224
00:15:56,000 --> 00:16:03,800
 We have, we push, actually, I said that we want to have it like WhatsApp and Tetragram.

225
00:16:03,800 --> 00:16:08,320
 We have DeltaChat in like ten different app stores, like of course Android,

226
00:16:08,320 --> 00:16:16,080
 Google Play, and F-Droid, and Apple Store, and often also on test flight.

227
00:16:16,080 --> 00:16:22,000
 But also some special app stores in Iran and some other places.

228
00:16:24,160 --> 00:16:28,480
 And we have, I would say, currently like 10 to 15 active contributors.

229
00:16:28,480 --> 00:16:35,040
 We also have a little community around setting up your own server so

230
00:16:35,040 --> 00:16:37,960
 you can easily give out email accounts to your friends.

231
00:16:37,960 --> 00:16:41,120
 We have QR code scan, you scan it, you have an account.

232
00:16:41,120 --> 00:16:43,080
 And then you can just use it for chatting.

233
00:16:43,080 --> 00:16:47,440
 That is actually something that we call the dedicated chat email account, so

234
00:16:47,440 --> 00:16:50,920
 that you really just have an email account that you just use for chat.

235
00:16:50,920 --> 00:16:55,600
 You can use your existing address and kind of share with your other email app.

236
00:16:55,600 --> 00:16:57,560
 Or you can use a dedicated.

237
00:16:57,560 --> 00:16:59,880
 And the dedicated is like a kind of a clear model.

238
00:16:59,880 --> 00:17:02,280
 It's very easy to just try and onboard and

239
00:17:02,280 --> 00:17:05,520
 you don't mess with your kind of existing email address.

240
00:17:05,520 --> 00:17:10,720
 But also like half the people who answered in the Fettyverse poll said they

241
00:17:10,720 --> 00:17:14,960
 use the existing email address, which is like the original model, but

242
00:17:14,960 --> 00:17:17,680
 the server guide is also important there.

243
00:17:20,160 --> 00:17:22,360
 I think with that I would like to close.

244
00:17:22,360 --> 00:17:23,480
 Maybe one or two questions.

245
00:17:23,480 --> 00:17:27,200
 I think that Neil actually wanted to say something earlier.

246
00:17:27,200 --> 00:17:34,360
 Otherwise, we are at the Delta Chat Village over there in Comona.

247
00:17:34,360 --> 00:17:38,960
 Might also, if there's interest, we can also do some sessions, but

248
00:17:38,960 --> 00:17:41,520
 you can always just come there and see who's there.

249
00:17:41,520 --> 00:17:46,160
 We are like six, seven people at least who are mostly sitting in the last bench.

250
00:17:46,160 --> 00:17:49,000
 Except the orange t-shirt maybe.

251
00:17:49,000 --> 00:17:52,280
 Are you also programming in Delta Chat?

252
00:17:52,280 --> 00:17:54,120
 No, okay.

253
00:17:54,120 --> 00:17:54,640
 So.

254
00:17:54,640 --> 00:18:01,840
 And yeah, so with that I'd like to close.

255
00:18:01,840 --> 00:18:03,480
 And maybe let Neil ask.

256
00:18:03,480 --> 00:18:09,280
 >> You gave as an example the collaborative editor.

257
00:18:09,280 --> 00:18:13,040
 And then you also said that you can use a standard in and

258
00:18:13,040 --> 00:18:14,040
 standard out model.

259
00:18:14,040 --> 00:18:16,680
 And I'm wondering how you get the file out.

260
00:18:18,040 --> 00:18:20,480
 >> The file out of the editor.

261
00:18:20,480 --> 00:18:21,000
 >> Yeah.

262
00:18:21,000 --> 00:18:27,080
 >> Yes, we implemented something funded by an earlier this year.

263
00:18:27,080 --> 00:18:30,600
 Where you can have an, there's another API, it's not just send and receive.

264
00:18:30,600 --> 00:18:35,800
 So the other IO that you have is send an attachment to a chat.

265
00:18:35,800 --> 00:18:40,960
 So any web app can just generate an image or generate a markdown file or

266
00:18:40,960 --> 00:18:42,920
 generate an ICS calendar file.

267
00:18:42,920 --> 00:18:44,480
 There's also a calendar.

268
00:18:44,480 --> 00:18:48,880
 And then you can actually send this item to whatever chat you choose.

269
00:18:48,880 --> 00:18:51,680
 So from the web app you say, you basically call this function and

270
00:18:51,680 --> 00:18:53,680
 then it switches back to the messenger.

271
00:18:53,680 --> 00:18:56,200
 And you send it the attachment to whatever chat you want.

272
00:18:56,200 --> 00:18:59,240
 And there's also import files so

273
00:18:59,240 --> 00:19:05,240
 you can actually import resources from the local file system into your web app.

274
00:19:05,240 --> 00:19:08,000
 And then do something and send it onto a chat.

275
00:19:08,000 --> 00:19:11,440
 Like taking an image and modifying it or whatever.

276
00:19:11,440 --> 00:19:21,440
 [BLANK_AUDIO]

277
00:19:21,440 --> 00:19:24,780
 Okay.

278
00:19:24,780 --> 00:19:27,880
 Thanks a lot.

279
00:19:27,880 --> 00:19:29,720
 >> It appears we are out of questions.

280
00:19:29,720 --> 00:19:32,160
 And so first of all, a big round of applause for Holger.

281
00:19:32,160 --> 00:19:39,680
 >> [APPLAUSE]

282
00:19:39,680 --> 00:19:44,720
 [MUSIC]

